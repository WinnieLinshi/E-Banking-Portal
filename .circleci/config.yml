# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-job:
    working_directory: ~/demo
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/openjdk:8-jdk
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - setup_remote_docker
      - run: mvn clean package
      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: target/demo-0.0.1-SNAPSHOT.jar
      - run:
          name: build and push Docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t winnie2949/demo:$TAG .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
    # build job ommitted for brevity
  deploy-job:
    docker:
      - image: winnie2949/demo:0.1.$CIRCLE_BUILD_NUM
    working_directory: /tmp/demo
    steps:
      - run:
          name: Deploy Main to GKE
          command: |
            sudo /opt/google-cloud-sdk/bin/gcloud docker push us.gcr.io/${PROJECT_NAME}/hello
            sudo chown -R ubuntu:ubuntu /home/ubuntu/.kube
            kubectl patch deployment docker-hello-google -p '{"spec":{"template":{"spec":{"containers":[{"name":"docker-hello-google","image":"us.gcr.io/circle-ctl-test/hello:'"$CIRCLE_SHA1"'"}]}}}}'

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
      - deploy-job:
          requires:
            - build-job # Only deploy once the build job has completed
          filters:
            branches:
              only: master # Only deploy on the main branch      
